name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: flightdb

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    # Start all services using Docker Compose
    - name: Start Docker Compose
      run: |
        docker-compose down
        docker-compose up --build -d

    - name: Wait for Services to be Ready
      run: |
        npx wait-on http://localhost:3000
        npx wait-on http://localhost:5002

    # Backend Tests
    - name: Run Backend Tests
      working-directory: ./backend
      run: npm install && npm test

    # Frontend Tests
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm install

    - name: Install Cypress
      working-directory: ./frontend
      run: npm install cypress --save-dev

    - name: Install Cypress Binary
      working-directory: ./frontend
      run: npx cypress install

    - name: Run Cypress Tests
      working-directory: ./frontend
      env:
        CYPRESS_BASE_URL: http://localhost:3000
      run: npx cypress run

  docker-deploy:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Deploy Using Docker Compose
      run: |
        docker-compose down
        docker-compose up --build -d

    - name: Verify Services are Running
      run: docker ps
