name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: flightdb

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    # Backend - Install dependencies and run tests
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm install

    - name: Fix Jest Permissions
      working-directory: ./backend
      run: chmod +x ./node_modules/.bin/jest

    - name: Wait for PostgreSQL to be ready
      run: |
        for i in {1..10}; do
          pg_isready -h localhost -p 5432 -U admin && echo "PostgreSQL is ready" && exit 0
          echo "Waiting for PostgreSQL..."
          sleep 5
        done
        echo "PostgreSQL did not become ready in time" && exit 1

    - name: Set Backend Environment Variables
      run: |
        echo DATABASE_HOST=127.0.0.1 >> $GITHUB_ENV
        echo DATABASE_USER=admin >> $GITHUB_ENV
        echo DATABASE_PASSWORD=secret >> $GITHUB_ENV
        echo DATABASE_NAME=flightdb >> $GITHUB_ENV
        echo DATABASE_PORT=5432 >> $GITHUB_ENV

    - name: Start Backend Server
      working-directory: ./backend
      run: npm start &
      env:
        DATABASE_HOST: 127.0.0.1
        DATABASE_USER: admin
        DATABASE_PASSWORD: secret
        DATABASE_NAME: flightdb
        DATABASE_PORT: 5432

    - name: Wait for Backend to be ready
      run: npx wait-on http://localhost:5002

    - name: Run Backend Tests
      working-directory: ./backend
      env:
        DATABASE_HOST: ${{ env.DATABASE_HOST }}
        DATABASE_USER: ${{ env.DATABASE_USER }}
        DATABASE_PASSWORD: ${{ env.DATABASE_PASSWORD }}
        DATABASE_NAME: ${{ env.DATABASE_NAME }}
        DATABASE_PORT: ${{ env.DATABASE_PORT }}
      run: npx jest --runInBand

    # Frontend - Install dependencies, build, and test
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm install

    - name: Install Cypress
      working-directory: ./frontend
      run: |
        npm install cypress --save-dev
        chmod +x ./node_modules/.bin/cypress

    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build

    - name: Start Frontend Server
      working-directory: ./frontend
      run: npm start &
      env:
        NEXT_PUBLIC_BACKEND_URL: http://localhost:5002

    - name: Wait for Frontend to be ready
      run: npx wait-on http://localhost:3000

    - name: Run Cypress Tests
      working-directory: ./frontend
      env:
        CYPRESS_BASE_URL: http://localhost:3000
      run: npx cypress run

  docker-deploy:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Set up Docker Compose
      run: |
        docker-compose down
        docker-compose up --build -d

    - name: Verify Services are Running
      run: docker ps